name: Test Suite

on:
  push:
    branches: [ "*" ]  # Run on push to any branch
  pull_request:
    branches: [ main, develop ]  # Run on PRs to main or develop

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.12"]

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: test
          POSTGRES_USER: test
          POSTGRES_DB: test_chillflow
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"

    - name: Cache uv dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/uv
        key: ${{ runner.os }}-uv-${{ hashFiles('**/uv.lock') }}
        restore-keys: |
          ${{ runner.os }}-uv-

    - name: Install dependencies
      run: |
        uv sync --all-extras

    - name: Set up environment variables
      run: |
        echo "DATABASE_URL=postgresql+psycopg://test:test@localhost:5432/test_chillflow" >> $GITHUB_ENV
        echo "REDIS_URL=redis://localhost:6379" >> $GITHUB_ENV
        echo "KAFKA_BOOTSTRAP_SERVERS=localhost:9092" >> $GITHUB_ENV
        echo "HASH_SALT=github-actions-test-salt" >> $GITHUB_ENV

    - name: Run unit tests
      run: |
        uv run make test TYPE=unit

    - name: Run stream service tests
      run: |
        uv run make test TYPE=stream

    - name: Run batch service tests
      run: |
        uv run make test TYPE=batch

    - name: Run contract tests
      run: |
        uv run make test TYPE=contracts

    - name: Run smoke tests
      run: |
        uv run make test TYPE=smoke

    - name: Run performance tests
      run: |
        uv run make test TYPE=performance

    - name: Run all tests (comprehensive)
      run: |
        uv run make test TYPE=all

    - name: Test infrastructure (if available)
      run: |
        # Only run if infrastructure tests exist and Docker is available
        if [ -d "tests/infrastructure" ]; then
          uv run make test TYPE=infra || echo "Infrastructure tests skipped (Docker not available in CI)"
        fi
      continue-on-error: true

    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-results
        path: |
          .pytest_cache/
          test-results.xml
        retention-days: 7
