name: Continuous Integration

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # Code Quality Checks
  quality:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.12"

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"

    - name: Install dependencies
      run: |
        uv sync --all-extras

    - name: Run pre-commit hooks
      run: |
        uv run pre-commit run --all-files --config .pre-commit-config-ci.yaml

  # Unit and Integration Tests
  test:
    runs-on: ubuntu-latest
    needs: quality

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: test
          POSTGRES_USER: test
          POSTGRES_DB: test_chillflow
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.12"

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"

    - name: Cache uv dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/uv
        key: ${{ runner.os }}-uv-${{ hashFiles('**/uv.lock') }}
        restore-keys: |
          ${{ runner.os }}-uv-

    - name: Install dependencies
      run: |
        uv sync --all-extras

    - name: Set up environment variables
      run: |
        echo "DATABASE_URL=postgresql+psycopg://test:test@localhost:5432/test_chillflow" >> $GITHUB_ENV
        echo "REDIS_URL=redis://localhost:6379" >> $GITHUB_ENV
        echo "KAFKA_BOOTSTRAP_SERVERS=localhost:9092" >> $GITHUB_ENV
        echo "HASH_SALT=github-actions-test-salt" >> $GITHUB_ENV

    - name: Run comprehensive test suite
      run: |
        echo "ðŸ§ª Running comprehensive test suite..."
        uv run make test TYPE=all

    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-results
        path: |
          .pytest_cache/
        retention-days: 7

  # Integration Tests with Docker (optional)
  integration:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'pull_request' || github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.12"

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"

    - name: Install dependencies
      run: |
        uv sync --all-extras

    - name: Set up environment variables
      run: |
        echo "DATABASE_URL=postgresql+psycopg://test:test@localhost:5432/test_chillflow" >> $GITHUB_ENV
        echo "REDIS_URL=redis://localhost:6379" >> $GITHUB_ENV
        echo "KAFKA_BOOTSTRAP_SERVERS=localhost:9092" >> $GITHUB_ENV
        echo "HASH_SALT=github-actions-test-salt" >> $GITHUB_ENV

    - name: Run integration tests
      run: |
        echo "ðŸ§ª Running integration tests..."
        uv run make test TYPE=stream-integration || echo "Stream integration tests skipped"
        uv run make test TYPE=batch-integration || echo "Batch integration tests skipped"
      continue-on-error: true

    - name: Upload integration test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: integration-test-results
        path: |
          .pytest_cache/
        retention-days: 7
