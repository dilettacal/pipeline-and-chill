name: CI/CD Pipeline (Testcontainers)

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ main, develop ]

jobs:
  tests:
    runs-on: ubuntu-latest
    env:
      # Enable Testcontainers in all environments
      USE_TESTCONTAINERS: "true"
      # Speed knobs for ephemeral runners
      TESTCONTAINERS_CHECKS_DISABLE: "true"     # skip env diagnostics
      TESTCONTAINERS_RYUK_DISABLED: "true"      # safe on GH-hosted runners
      # Optional: reduce Kafka startup time by keeping tests simple
      KAFKA_IT_TOPIC_PARTITIONS: "1"
      KAFKA_IT_TOPIC_RF: "1"
      # Database and Redis for Testcontainers
      DATABASE_URL: "postgresql+psycopg://test:test@localhost:5432/test_chillflow"
      REDIS_URL: "redis://localhost:6379"
      HASH_SALT: "github-actions-test-salt"

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"

    - name: Cache uv dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/uv
        key: ${{ runner.os }}-uv-${{ hashFiles('**/uv.lock') }}
        restore-keys: |
          ${{ runner.os }}-uv-

    - name: Install dependencies
      run: |
        uv sync --all-extras

    # Pre-pull images Testcontainers will use to save 30‚Äì60s
    - name: Pre-pull Kafka & Ryuk images
      run: |
        docker pull confluentinc/cp-kafka:7.6.1 || true
        docker pull testcontainers/ryuk:0.6.0 || true

    - name: Code Quality Checks
      run: |
        echo "üîç Running code quality checks..."
        uv run pre-commit run --all-files --config .pre-commit-config-ci.yaml

    - name: Run all tests (unit + integration with Testcontainers)
      run: |
        echo "üß™ Running comprehensive test suite with Testcontainers..."
        # Show Docker info for quick debugging
        docker version
        docker ps
        uv run make test TYPE=all
